temporal:
  # Core Temporal Server Configuration
  server:
    image: temporalio/auto-setup:latest
    ports:
      - "7233:7233"  # gRPC Frontend
      - "7234:7234"  # gRPC Frontend Admin
    environment:
      - TEMPORAL_DB_HOST=${DOKKU_POSTGRES_TEMPORAL_HOST}
      - TEMPORAL_DB_PORT=${DOKKU_POSTGRES_TEMPORAL_PORT}
      - TEMPORAL_DB_USER=${DOKKU_POSTGRES_TEMPORAL_USER}
      - TEMPORAL_DB_PASSWORD=${DOKKU_POSTGRES_TEMPORAL_PASSWORD}
      - TEMPORAL_DB_DATABASE=${DOKKU_POSTGRES_TEMPORAL_NAME}
      - TEMPORAL_ES_HOST=temporal-es
      - TEMPORAL_ES_PORT=9200
      - TEMPORAL_ES_INDEX_PREFIX=temporal
    depends_on:
      - temporal-es

  # Optional UI Configuration
  ui:
    enabled: false
    image: temporalio/auto-setup:latest
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_DB_HOST=${DOKKU_POSTGRES_TEMPORAL_HOST}
      - TEMPORAL_DB_PORT=${DOKKU_POSTGRES_TEMPORAL_PORT}
      - TEMPORAL_DB_USER=${DOKKU_POSTGRES_TEMPORAL_USER}
      - TEMPORAL_DB_PASSWORD=${DOKKU_POSTGRES_TEMPORAL_PASSWORD}
      - TEMPORAL_DB_DATABASE=${DOKKU_POSTGRES_TEMPORAL_NAME}
      - TEMPORAL_ES_HOST=temporal-es
      - TEMPORAL_ES_PORT=9200
      - TEMPORAL_ES_INDEX_PREFIX=temporal
    depends_on:
      - temporal-server

  # Optional Metrics Configuration
  metrics:
    enabled: false
    prometheus:
      image: prom/prometheus:latest
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus-data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
    grafana:
      image: grafana/grafana:latest
      ports:
        - "8085:3000"
      volumes:
        - grafana-data:/var/lib/grafana
      depends_on:
        - prometheus

  # Elasticsearch Configuration
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2

  # Elasticsearch Configuration
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - temporal-es-data:/usr/share/elasticsearch/data

  # Network Configuration
  network:
    name: temporal-network
    driver: bridge

  # Volume Configuration
  volumes:
    temporal-es-data:
      driver: local
    prometheus-data:
      driver: local
    grafana-data:
      driver: local

  # Security Configuration
  security:
    tls:
      enabled: false
    authentication:
      enabled: false

  # Additional Tools
  admin-tools:
    image: temporalio/auto-setup:latest
    entrypoint: /bin/sh
    command: -c "sleep infinity"
    depends_on:
      - temporal-server
    environment:
      - TEMPORAL_DB_HOST=${DOKKU_POSTGRES_TEMPORAL_HOST}
      - TEMPORAL_DB_PORT=${DOKKU_POSTGRES_TEMPORAL_PORT}
      - TEMPORAL_DB_USER=${DOKKU_POSTGRES_TEMPORAL_USER}
      - TEMPORAL_DB_PASSWORD=${DOKKU_POSTGRES_TEMPORAL_PASSWORD}
      - TEMPORAL_DB_DATABASE=${DOKKU_POSTGRES_TEMPORAL_NAME}
      - TEMPORAL_ES_HOST=temporal-es
      - TEMPORAL_ES_PORT=9200
      - TEMPORAL_ES_INDEX_PREFIX=temporal

  # Logging Configuration
  logging:
    level: info
    format: json
    output: stdout
    # Loki Configuration (optional)
    loki:
      enabled: false
      url: "http://loki:3100/loki/api/v1/push"
